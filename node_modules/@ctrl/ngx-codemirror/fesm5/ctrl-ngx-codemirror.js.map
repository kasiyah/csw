{"version":3,"file":"ctrl-ngx-codemirror.js","sources":["ng://@ctrl/ngx-codemirror/codemirror.component.ts","ng://@ctrl/ngx-codemirror/codemirror.module.ts","ng://@ctrl/ngx-codemirror/ctrl-ngx-codemirror.ts"],"sourcesContent":["import {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  Component,\n  DoCheck,\n  ElementRef,\n  EventEmitter,\n  forwardRef,\n  Input,\n  KeyValueDiffer,\n  KeyValueDiffers,\n  NgZone,\n  OnDestroy,\n  Output,\n  ViewChild,\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport {\n  Editor,\n  EditorChangeLinkedList,\n  EditorFromTextArea,\n  ScrollInfo,\n} from 'codemirror';\n\nfunction normalizeLineEndings(str: string) {\n  if (!str) {\n    return str;\n  }\n  return str.replace(/\\r\\n|\\r/g, '\\n');\n}\n\ndeclare var require: any;\n/* tslint:disable */\nvar CodeMirror: any;\n/* tslint:enable */\n\n@Component({\n  selector: 'ngx-codemirror',\n  template: `\n    <textarea\n      [name]=\"name\"\n      class=\"ngx-codemirror {{ className }}\"\n      [class.ngx-codemirror--focused]=\"isFocused\"\n      autocomplete=\"off\"\n      [autofocus]=\"autoFocus\"\n      #ref\n    >\n    </textarea>\n  `,\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => CodemirrorComponent),\n      multi: true,\n    },\n  ],\n  preserveWhitespaces: false,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CodemirrorComponent\n  implements AfterViewInit, OnDestroy, ControlValueAccessor, DoCheck {\n  /* class applied to the created textarea */\n  @Input() className = '';\n  /* name applied to the created textarea */\n  @Input() name = 'codemirror';\n  /* autofocus setting applied to the created textarea */\n  @Input() autoFocus = false;\n  /**\n   * set options for codemirror\n   * @link http://codemirror.net/doc/manual.html#config\n   */\n  @Input()\n  set options(value: { [key: string]: any }) {\n    this._options = value;\n    if (!this._differ && value) {\n      this._differ = this._differs.find(value).create();\n    }\n  }\n  /* preserve previous scroll position after updating value */\n  @Input() preserveScrollPosition = false;\n  /* called when the text cursor is moved */\n  @Output() cursorActivity = new EventEmitter<Editor>();\n  /* called when the editor is focused or loses focus */\n  @Output() focusChange = new EventEmitter<boolean>();\n  /* called when the editor is scrolled */\n  @Output() scroll = new EventEmitter<ScrollInfo>();\n  /* called when file(s) are dropped */\n  @Output() drop = new EventEmitter<[Editor, DragEvent]>();\n  @ViewChild('ref', { static: true }) ref: ElementRef;\n  value = '';\n  disabled = false;\n  isFocused = false;\n  codeMirror: EditorFromTextArea;\n  /**\n   * either global variable or required library\n   */\n  private _codeMirror: any;\n\n  private _differ: KeyValueDiffer<string, any>;\n  private _options: any;\n\n  constructor(private _differs: KeyValueDiffers, private _ngZone: NgZone) {}\n\n  get codeMirrorGlobal() {\n    if (this._codeMirror) {\n      return this._codeMirror;\n    }\n\n    this._codeMirror = CodeMirror ? CodeMirror : require('codemirror');\n    return this._codeMirror;\n  }\n\n  ngAfterViewInit() {\n    if (!this.ref) {\n      return;\n    }\n    // in order to allow for universal rendering, we import Codemirror runtime with `require` to prevent node errors\n    this._ngZone.runOutsideAngular(() => {\n      this.codeMirror = this.codeMirrorGlobal.fromTextArea(\n        this.ref.nativeElement,\n        this._options,\n      );\n      this.codeMirror.on('cursorActivity', cm =>\n        this._ngZone.run(() => this.cursorActive(cm)),\n      );\n      this.codeMirror.on('scroll', this.scrollChanged.bind(this));\n      this.codeMirror.on('blur', () =>\n        this._ngZone.run(() => this.focusChanged(false)),\n      );\n      this.codeMirror.on('focus', () =>\n        this._ngZone.run(() => this.focusChanged(true)),\n      );\n      this.codeMirror.on(\n        'change',\n        (cm: Editor, change: EditorChangeLinkedList) =>\n          this._ngZone.run(() => this.codemirrorValueChanged(cm, change)),\n      );\n      this.codeMirror.on(\n        'drop',\n        (cm: Editor, e: DragEvent) => {\n          this._ngZone.run(() => this.dropFiles(cm, e));\n        }\n      );\n      this.codeMirror.setValue(this.value);\n    });\n  }\n  ngDoCheck() {\n    if (!this._differ) {\n      return;\n    }\n    // check options have not changed\n    const changes = this._differ.diff(this._options);\n    if (changes) {\n      changes.forEachChangedItem(option =>\n        this.setOptionIfChanged(option.key, option.currentValue),\n      );\n      changes.forEachAddedItem(option =>\n        this.setOptionIfChanged(option.key, option.currentValue),\n      );\n      changes.forEachRemovedItem(option =>\n        this.setOptionIfChanged(option.key, option.currentValue),\n      );\n    }\n  }\n  ngOnDestroy() {\n    // is there a lighter-weight way to remove the cm instance?\n    if (this.codeMirror) {\n      this.codeMirror.toTextArea();\n    }\n  }\n  codemirrorValueChanged(cm: Editor, change: EditorChangeLinkedList) {\n    if (change.origin !== 'setValue') {\n      this.value = cm.getValue();\n      this.onChange(this.value);\n    }\n  }\n  setOptionIfChanged(optionName: string, newValue: any) {\n    if (!this.codeMirror) {\n      return;\n    }\n\n    // cast to any to handle strictly typed option names\n    // could possibly import settings strings available in the future\n    this.codeMirror.setOption(optionName as any, newValue);\n  }\n  focusChanged(focused: boolean) {\n    this.onTouched();\n    this.isFocused = focused;\n    this.focusChange.emit(focused);\n  }\n  scrollChanged(cm: Editor) {\n    this.scroll.emit(cm.getScrollInfo());\n  }\n  cursorActive(cm: Editor) {\n    this.cursorActivity.emit(cm);\n  }\n  dropFiles(cm: Editor, e: DragEvent) {\n    this.drop.emit([cm, e]);\n  }\n  /** Implemented as part of ControlValueAccessor. */\n  writeValue(value: string): void {\n    if (value === null || value === undefined) {\n      return;\n    }\n    if (!this.codeMirror) {\n      this.value = value;\n      return;\n    }\n    const cur = this.codeMirror.getValue();\n    if (\n      value !== cur &&\n      normalizeLineEndings(cur) !== normalizeLineEndings(value)\n    ) {\n      this.value = value;\n      if (this.preserveScrollPosition) {\n        const prevScrollPosition = this.codeMirror.getScrollInfo();\n        this.codeMirror.setValue(this.value);\n        this.codeMirror.scrollTo(\n          prevScrollPosition.left,\n          prevScrollPosition.top,\n        );\n      } else {\n        this.codeMirror.setValue(this.value);\n      }\n    }\n  }\n\n  /** Implemented as part of ControlValueAccessor. */\n  registerOnChange(fn: (value: string) => void): void {\n    this.onChange = fn;\n  }\n  /** Implemented as part of ControlValueAccessor. */\n  registerOnTouched(fn: () => void): void {\n    this.onTouched = fn;\n  }\n  /** Implemented as part of ControlValueAccessor. */\n  setDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n    this.setOptionIfChanged('readOnly', this.disabled);\n  }\n  /** Implemented as part of ControlValueAccessor. */\n  private onChange = (_: any) => {};\n  /** Implemented as part of ControlValueAccessor. */\n  private onTouched = () => {};\n}\n","import { NgModule } from '@angular/core';\n\nimport { CodemirrorComponent } from './codemirror.component';\n\n@NgModule({\n  exports: [CodemirrorComponent],\n  declarations: [CodemirrorComponent],\n})\nexport class CodemirrorModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":["tslib_1.__decorate"],"mappings":"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"}